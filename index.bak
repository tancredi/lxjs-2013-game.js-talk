<!doctype html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title>reveal.js - The HTML Presentation Framework</title>

		<meta name="description" content="A framework for easily creating beautiful presentations using HTML">
		<meta name="author" content="Hakim El Hattab">

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<link rel="stylesheet" href="css/reveal.min.css">
		<link rel="stylesheet" href="css/theme/night.css" id="theme">
		<link rel="stylesheet" href="css/theme/custom.css" id="theme">

		<!-- For syntax highlighting -->
		<link rel="stylesheet" href="lib/css/zenburn.css">

		<!-- If the query includes 'print-pdf', use the PDF print sheet -->
		<script>
			document.write( '<link rel="stylesheet" href="css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
		</script>

		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->
	</head>

	<body>

		<div class="reveal">

			<!-- Any section element inside of this container is displayed as a slide -->
			<div class="slides">
				
				<section>
					
					<h2>A web dive into game development</h2>
					<br>
					<h4>Tancredi Trugenberger</h4>

				</section>
				<section>
					
					<h2>Alps</h2>
					<img src="../img/01.alps.gif">
					<h4>The Digital Divide</h4>

				</section>
				<section>

					<img src="../img/02.startups.png">

				</section>
				<section>

					<h2>Games</h2>
					<ul>
						<li>Are fun to play</li>
						<li>Are fun to develop</li>
						<li>Use a vaste spectrum of medium</li>
						<li>As personal expression</li>
					</ul>

				</section>
				<section>

					<h2>We're all game developers!</h2>
					<h3>A few core principles in gaming..</h3>

				</section>
				<section>

					<h1>N.1</h1>
					<h2>Meaningful play</h2>
					<h3>Reward your users</h3>
					<br>

					<blockquote>
						"Meaningful play is what occurs when the relationships between actions and outcomes in a game are both discernable and integrated into the larger context of the game."
					</blockquote>
					<br>
					<h5>Salen & Zimmerman in “Rules of Play”, 2004</h5>

				</section>
				<section>

					<h1>N.2</h1>
					<h2>Gameplay Balance</h2>
					<h3>Underdetermination</h3>
					<br>

					<blockquote>
						"When players have multiple options or routes to victory, each option or route should have a risk-reward relationship that prevents dominant strategies. The level design, in particular, should accommodate this feature."
					</blockquote>

				</section>
				<section>

					<h1>N.3</h1>
					<h2>Linear Design / Component Breakdown</h2>
					<h3>Component driven design</h3>

					<br>

					Creating a consistent visual language will help building a more explicit and easy to use experience

				</section>
				<section>

					<img class="no-frame" src="../img/03.html5.png">

				</section>
				<section>

					<h2>Choose your weapons</h2>

					<img src="../img/04.weapons.jpg">

					<br>

					<ul>
						<li>Canvas</li>
						<li>DOM</li>
						<li>WebGL</li>
					</ul>

				</section>

			</div>

		</div>

		<script src="lib/js/head.min.js"></script>
		<script src="js/reveal.min.js"></script>

		<script>

			// Full list of configuration options available here:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
				transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

				// Optional libraries used to extend on reveal.js
				dependencies: [
					{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
					{ src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
				]
			});

		</script>

	</body>
</html>
